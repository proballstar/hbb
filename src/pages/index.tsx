import Head from "next/head";
import Image from "next/image";
import styles from '../styles/home.module.css'
import { Dispatch, SetStateAction, useMemo, useState } from "react";
import { useLoadScript, GoogleMap, MarkerF, InfoBox } from "@react-google-maps/api";
import Modal from '../components/modal'
import { api } from "~/utils/api";


export default function Home() {

  const postsQuery = api.post.get.useQuery()
  const takeQuery = api.post.take.useMutation()
  
  const libraries = useMemo(
    () => ['places'],
    []
  )
  
  const mapCenter = useMemo(
    () => ({ lat: 37.77, lng: -110.42 }),
    []
  )
  
  const mapOptions = useMemo<google.maps.MapOptions>(
    () => ({
      disableDefaultUI: true,
      clickableIcons: true,
      scrollwheel: true,
      zoomControl: true 
    }),
    []
  )
  
  const { isLoaded } = useLoadScript({
    googleMapsApiKey: process.env.NEXT_PUBLIC_LOCAL_KEY as string,
    libraries: libraries as any
  })
  
  function Loaded() {
    return (
      <div>
        Loading...
      </div>
    )
  }
  
  
  interface Point {
    geo: {
      lat: number;
      lng: number;
    }
    desc: string;
    title: string;
  }
  
  function Container() {
    
    const [points, setPoints] = useState<Point[]>([]);
    const [open, setOpen] = useState<boolean>(false);
    
    
    
    return (
      <div className={styles.homeWrapper}>
        <Modal onClose={() => setOpen(false)} show={open} />
        
        <div className={styles.sidebar}>
          <button onClick={e => setOpen(true)}>
            Open Modal
          </button>
        </div>
        <GoogleMap
          options={mapOptions}
          zoom={8}
          center={mapCenter}
          mapTypeId={google.maps.MapTypeId.ROADMAP}
          mapContainerStyle={{ width: '800px', height: '800px' }}
          onLoad={() => console.log('Map Component Loaded...')}
        >
  
            {Array.isArray(postsQuery.data) && postsQuery.data.map((v, k) => {
              return (
                <>
                <MarkerF 
                  key={`gmap-marker-${v.latitude}-${v.longitude}-${k}`} 
                  position={{
                    lat: v.latitude,
                    lng: v.longitude
                  }} 
                />
                <InfoBox 
                  position={{
                    lat: () => v.latitude,
                    lng: () => v.longitude
                  }} 
                >
                  <h1>{v.title} by @{v.authorId}v</h1>
                  <div>
                    {v.content}
                  </div>
                  <button onClick={() => takeQuery.mutate({postId: v.id})}>
                    Collect {v.tokenWorth} pounds of food 
                  </button>
                </InfoBox>
              </>
              )
            })}
      </GoogleMap>
    </div>
    )
  }
  
  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
     {!isLoaded ? <Loaded />: <Container />}
    </>
  );
}
